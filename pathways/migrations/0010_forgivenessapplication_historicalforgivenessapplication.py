# Generated by Django 2.2.13 on 2020-07-07 19:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pathways', '0009_auto_20200420_1004'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForgivenessApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('middle_initial', models.CharField(blank=True, max_length=5)),
                ('street_address', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(message='Make sure to enter a street number before the street name, for example 123 Main St', regex='^\\d+ .*')])),
                ('apartment_unit', models.CharField(blank=True, help_text="Skip this if you don't live in an apartment", max_length=10)),
                ('zip_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='Your ZIP code must be exactly 5 digits', regex='^\\d{5}$')])),
                ('phone_number', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Please use a valid phone number format such as 716-555-5555.', regex='^(\\d{10}|(\\d{3}\\-\\d{3}\\-\\d{4}))|(\\(\\d{3}\\)\\s?\\d{3}\\-\\d{4})')])),
                ('email_address', models.EmailField(blank=True, help_text='Optional to provide for status updates on your application', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalForgivenessApplication',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('middle_initial', models.CharField(blank=True, max_length=5)),
                ('street_address', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(message='Make sure to enter a street number before the street name, for example 123 Main St', regex='^\\d+ .*')])),
                ('apartment_unit', models.CharField(blank=True, help_text="Skip this if you don't live in an apartment", max_length=10)),
                ('zip_code', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator(message='Your ZIP code must be exactly 5 digits', regex='^\\d{5}$')])),
                ('phone_number', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Please use a valid phone number format such as 716-555-5555.', regex='^(\\d{10}|(\\d{3}\\-\\d{3}\\-\\d{4}))|(\\(\\d{3}\\)\\s?\\d{3}\\-\\d{4})')])),
                ('email_address', models.EmailField(blank=True, help_text='Optional to provide for status updates on your application', max_length=254)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical forgiveness application',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
